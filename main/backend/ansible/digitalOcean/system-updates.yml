---
- name: System Updates and Security Patches
  hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: Update apt cache (Ubuntu/Debian)
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    - name: Upgrade all packages to latest version
      apt:
        upgrade: dist
        autoremove: yes
        autoclean: yes
      when: ansible_os_family == "Debian"
      register: upgrade_result

    - name: Install unattended-upgrades package
      apt:
        name: unattended-upgrades
        state: present
      when: ansible_os_family == "Debian"

    - name: Configure automatic security updates
      copy:
        dest: /etc/apt/apt.conf.d/20auto-upgrades
        content: |
          APT::Periodic::Update-Package-Lists "1";
          APT::Periodic::Unattended-Upgrade "1";
          APT::Periodic::AutocleanInterval "7";
        mode: "0644"
      when: ansible_os_family == "Debian"

    - name: Configure unattended-upgrades for security only
      copy:
        dest: /etc/apt/apt.conf.d/50unattended-upgrades
        content: |
          Unattended-Upgrade::Allowed-Origins {
              "${distro_id}:${distro_codename}-security";
              "${distro_id}ESMApps:${distro_codename}-apps-security";
              "${distro_id}ESM:${distro_codename}-infra-security";
          };
          Unattended-Upgrade::AutoFixInterruptedDpkg "true";
          Unattended-Upgrade::MinimalSteps "true";
          Unattended-Upgrade::Remove-Unused-Dependencies "true";
          Unattended-Upgrade::Automatic-Reboot "false";
          Unattended-Upgrade::Automatic-Reboot-Time "02:00";
        mode: "0644"
      when: ansible_os_family == "Debian"

    - name: Remove unnecessary packages
      apt:
        name:
          - telnet
          - rsh-client
          - rsh-redone-client
          - talk
          - telnetd
          - rsh-server
          - rsh-redone-server
          - talkd
        state: absent
        purge: yes
      when: ansible_os_family == "Debian"
      ignore_errors: yes

    - name: Remove unused packages and dependencies
      apt:
        autoremove: yes
        autoclean: yes
      when: ansible_os_family == "Debian"

    - name: Check if reboot is required
      stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Display reboot requirement
      debug:
        msg: "System reboot is required to complete updates"
      when: reboot_required.stat.exists

    - name: Create update log entry
      lineinfile:
        path: /var/log/ansible-updates.log
        line: "{{ ansible_date_time.iso8601 }} - System updates completed"
        create: yes

  handlers:
    - name: restart services
      service:
        name: "{{ item }}"
        state: restarted
      loop:
        - ssh
        - cron
