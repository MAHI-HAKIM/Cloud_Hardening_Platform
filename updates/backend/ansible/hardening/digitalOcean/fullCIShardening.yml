---
- name: CIS Cloud Hardening - Aligned with Audit
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    # Remove hardcoded Python interpreter - let Ansible auto-detect
    ssh_config_backup: "/etc/ssh/sshd_config.backup.{{ ansible_date_time.epoch }}"

  tasks:
    # Pre-hardening backup
    - name: Create SSH config backup
      copy:
        src: /etc/ssh/sshd_config
        dest: "{{ ssh_config_backup }}"
        remote_src: yes
        backup: yes
      tags: backup

    # CIS 1.1.1 - Set SSH Banner
    - name: Ensure /etc/issue.net exists with proper banner
      copy:
        dest: /etc/issue.net
        content: |
          ***************************************************************************
                              AUTHORIZED ACCESS ONLY

          This system is for the use of authorized users only. Individuals using 
          this computer system without authority or in excess of their authority 
          are subject to having all their activities on this system monitored and 
          recorded by system personnel.

          Anyone using this system expressly consents to such monitoring and is 
          advised that if such monitoring reveals possible evidence of criminal 
          activity, system personnel may provide the evidence of such monitoring 
          to law enforcement officials.
          ***************************************************************************
        owner: root
        group: root
        mode: "0644"
      tags: ssh_banner

    - name: Configure SSH to use banner file
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?Banner"
        line: "Banner /etc/issue.net"
        backup: yes
        validate: "/usr/sbin/sshd -t -f %s"
      notify: restart_ssh
      tags: ssh_banner

    # CIS 1.3.1 - MOTD content
    - name: Ensure /etc/motd contains welcome message
      copy:
        dest: /etc/motd
        content: |
          Welcome to {{ ansible_hostname }}

          This system is monitored and managed according to security policies.
          All activities are logged and monitored.

          Unauthorized access is prohibited.

          Last updated: {{ ansible_date_time.date }}
        owner: root
        group: root
        mode: "0644"
      tags: motd

    # CIS 3.1.1 - Disable IP forwarding
    - name: Disable IP forwarding (runtime)
      sysctl:
        name: net.ipv4.ip_forward
        value: "0"
        state: present
        sysctl_set: yes
        reload: yes
      tags: ip_forward

    - name: Ensure IP forwarding disabled in sysctl.conf
      lineinfile:
        path: /etc/sysctl.conf
        regexp: '^#?net\.ipv4\.ip_forward'
        line: "net.ipv4.ip_forward = 0"
        state: present
        backup: yes
      tags: ip_forward

    # CIS 4.1.1.1 - Install and configure auditd
    - name: Install auditd package
      package:
        name:
          - auditd
          - audispd-plugins
        state: present
      tags: auditd

    - name: Ensure auditd service is enabled and started
      systemd:
        name: auditd
        enabled: yes
        state: started
        daemon_reload: yes
      tags: auditd

    - name: Configure basic audit rules
      blockinfile:
        path: /etc/audit/rules.d/audit.rules
        block: |
          # Basic CIS audit rules
          -w /etc/passwd -p wa -k identity
          -w /etc/group -p wa -k identity
          -w /etc/shadow -p wa -k identity
          -w /etc/sudoers -p wa -k identity
          -w /var/log/faillog -p wa -k logins
          -w /var/log/lastlog -p wa -k logins
        create: yes
        backup: yes
      notify: restart_auditd
      tags: auditd

    # CIS 5.2.4 - Disable SSH root login
    - name: Disable SSH root login
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?PermitRootLogin"
        line: "PermitRootLogin no"
        state: present
        backup: yes
        validate: "/usr/sbin/sshd -t -f %s"
      notify: restart_ssh
      tags: ssh_security

    # CIS 5.2.5 - Set SSH log level
    - name: Set SSH LogLevel to VERBOSE
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?LogLevel"
        line: "LogLevel VERBOSE"
        state: present
        backup: yes
        validate: "/usr/sbin/sshd -t -f %s"
      notify: restart_ssh
      tags: ssh_security

    # Additional SSH hardening
    - name: Additional SSH security settings
      blockinfile:
        path: /etc/ssh/sshd_config
        block: |
          # Additional CIS SSH hardening
          Protocol 2
          MaxAuthTries 3
          ClientAliveInterval 300
          ClientAliveCountMax 0
          PermitEmptyPasswords no
          PermitUserEnvironment no
        marker: "# {mark} ANSIBLE MANAGED CIS HARDENING"
        backup: yes
        validate: "/usr/sbin/sshd -t -f %s"
      notify: restart_ssh
      tags: ssh_security

    # CIS 6.1.10 - Fix world-writable files
    - name: Find world-writable files (excluding expected ones)
      shell: |
        find / -xdev -type f -perm -0002 \
        ! -path "/proc/*" \
        ! -path "/sys/*" \
        ! -path "/dev/*" \
        ! -path "/tmp/*" \
        ! -path "/var/tmp/*" \
        -print 2>/dev/null
      register: world_writable_files
      changed_when: false
      failed_when: false
      tags: file_permissions

    - name: Remove world-writable permissions from files
      file:
        path: "{{ item }}"
        mode: "o-w"
      loop: "{{ world_writable_files.stdout_lines }}"
      when:
        - world_writable_files.stdout_lines is defined
        - world_writable_files.stdout_lines | length > 0
      tags: file_permissions

    - name: Report fixed world-writable files
      debug:
        msg: "Fixed {{ world_writable_files.stdout_lines | length }} world-writable files"
      when:
        - world_writable_files.stdout_lines is defined
        - world_writable_files.stdout_lines | length > 0
      tags: file_permissions

    # Verification tasks
    - name: Verify SSH configuration syntax
      command: /usr/sbin/sshd -t
      changed_when: false
      tags: verification

    - name: Display hardening completion message
      debug:
        msg: |
          ===========================================
          CIS HARDENING COMPLETED SUCCESSFULLY
          ===========================================
          ✅ SSH Banner configured
          ✅ MOTD message set
          ✅ IP forwarding disabled  
          ✅ Auditd installed and configured
          ✅ SSH root login disabled
          ✅ SSH logging set to VERBOSE
          ✅ World-writable files fixed
          ✅ Additional SSH hardening applied

          SSH config backup: {{ ssh_config_backup }}
          ===========================================
      tags: always

  handlers:
    - name: restart_ssh
      systemd:
        name: sshd
        state: restarted
      listen: restart_ssh

    - name: restart_auditd
      systemd:
        name: auditd
        state: restarted
      listen: restart_auditd
