---
- name: Undo UFW Firewall Configuration
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    # Backup directory for safety
    backup_timestamp: "{{ ansible_date_time.epoch }}"
    backup_dir: "/root/ufw-removal-backup-{{ backup_timestamp }}"

  tasks:
    - name: Create backup directory
      file:
        path: "{{ backup_dir }}"
        state: directory
        mode: "0700"

    - name: Check if UFW is installed
      command: which ufw
      register: ufw_check
      failed_when: false
      changed_when: false

    - name: Backup current UFW rules before removal
      shell: |
        ufw status numbered > {{ backup_dir }}/ufw-rules-backup.txt
        ufw status verbose > {{ backup_dir }}/ufw-status-backup.txt
        cp /etc/ufw/ufw.conf {{ backup_dir }}/ufw.conf.backup 2>/dev/null || true
        cp /etc/ufw/before.rules {{ backup_dir }}/before.rules.backup 2>/dev/null || true
      when: ufw_check.rc == 0
      ignore_errors: yes

    - name: Display backup location
      debug:
        msg: "UFW configuration backed up to: {{ backup_dir }}"
      when: ufw_check.rc == 0

    - name: Disable UFW firewall
      ufw:
        state: disabled
      when: ufw_check.rc == 0
      ignore_errors: yes

    - name: Reset UFW to factory defaults
      ufw:
        state: reset
      when: ufw_check.rc == 0
      ignore_errors: yes

    - name: Remove custom UFW rules from before.rules
      blockinfile:
        path: /etc/ufw/before.rules
        marker: "# {mark} ANSIBLE MANAGED BLOCK - Anti-DDoS rules"
        state: absent
        backup: yes
      when: ufw_check.rc == 0
      ignore_errors: yes

    - name: Restore original UFW configuration file
      lineinfile:
        path: /etc/ufw/ufw.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backup: yes
      loop:
        - { regexp: "^LOGLEVEL=", line: "LOGLEVEL=low" }
        - { regexp: "^IPV6=", line: "IPV6=yes" }
      when: ufw_check.rc == 0
      ignore_errors: yes

    - name: Remove UFW management scripts
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /usr/local/bin/ufw-status.sh
        - /usr/local/bin/ufw-helper.sh
        - /usr/local/bin/ufw-backup.sh
      ignore_errors: yes

    - name: Remove UFW cron jobs
      cron:
        name: "{{ item }}"
        state: absent
        user: root
      loop:
        - "Daily UFW Firewall Report"
        - "Weekly UFW Rules Backup"
      ignore_errors: yes

    - name: Remove custom UFW log rotation configuration
      file:
        path: /etc/logrotate.d/ufw-custom
        state: absent
      ignore_errors: yes

    - name: Remove UFW log files (optional - commented out for safety)
      # Uncomment these if you want to remove log files completely
      # file:
      #   path: "{{ item }}"
      #   state: absent
      # loop:
      #   - /var/log/ufw.log
      #   - /var/log/ufw-daily.log
      # ignore_errors: yes

    - name: Remove UFW backup directories
      file:
        path: /root/ufw-backups
        state: absent
      ignore_errors: yes

    - name: Check if we should completely remove UFW package
      pause:
        prompt: |
          Do you want to completely remove the UFW package? 
          This will uninstall UFW entirely from the system.
          Press ENTER to keep UFW installed (recommended)
          Type 'remove' to uninstall UFW package completely
      register: removal_choice
      when: ufw_check.rc == 0

    - name: Remove UFW package completely (if requested)
      apt:
        name: ufw
        state: absent
        purge: yes
        autoremove: yes
      when:
        - ufw_check.rc == 0
        - ansible_os_family == "Debian"
        - removal_choice.user_input | default('') == 'remove'

    - name: Clean up UFW configuration directories (if package removed)
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/ufw
        - /lib/ufw
        - /usr/share/ufw
      when:
        - ufw_check.rc == 0
        - removal_choice.user_input | default('') == 'remove'
      ignore_errors: yes

    - name: Check final UFW status
      command: ufw status
      register: final_ufw_status
      failed_when: false
      changed_when: false
      when: removal_choice.user_input | default('') != 'remove'

    - name: Display cleanup summary
      debug:
        msg: |
          ===================================================
          UFW Firewall Cleanup Complete!
          ===================================================

          Actions taken:
          {% if ufw_check.rc == 0 %}
          ✓ UFW firewall disabled
          ✓ UFW rules reset to defaults
          ✓ Custom management scripts removed
          ✓ Cron jobs removed
          ✓ Custom log rotation removed
          ✓ Anti-DDoS rules removed
          ✓ Configuration backed up to: {{ backup_dir }}
          {% if removal_choice.user_input | default('') == 'remove' %}
          ✓ UFW package completely removed
          {% else %}
          ✓ UFW package kept (disabled state)
          {% endif %}
          {% else %}
          ⚠ UFW was not installed on this system
          {% endif %}

          Files preserved in backup:
          - UFW rules backup
          - UFW status backup  
          - Configuration files backup

          {% if removal_choice.user_input | default('') != 'remove' and ufw_check.rc == 0 %}
          Current UFW Status: {{ final_ufw_status.stdout | default('Not available') }}
          {% endif %}

          Security Note:
          - Your system now has no firewall protection from UFW
          - Consider setting up alternative firewall if needed
          - Backup preserved at: {{ backup_dir }}
          ===================================================

    - name: Create restoration script
      copy:
        dest: "{{ backup_dir }}/restore-ufw.sh"
        content: |
          #!/bin/bash
          echo "=== UFW Configuration Restoration Script ==="
          echo "This script can help restore your previous UFW configuration"
          echo ""
          echo "Backup location: {{ backup_dir }}"
          echo "Original configuration files:"
          echo "- UFW rules: {{ backup_dir }}/ufw-rules-backup.txt"
          echo "- UFW status: {{ backup_dir }}/ufw-status-backup.txt"
          echo "- UFW config: {{ backup_dir }}/ufw.conf.backup"
          echo "- Before rules: {{ backup_dir }}/before.rules.backup"
          echo ""
          echo "To restore UFW protection, you'll need to:"
          echo "1. Reinstall UFW: apt install ufw"
          echo "2. Review the backup files above"
          echo "3. Manually reconfigure rules based on your backup"
          echo "4. Re-run your original UFW hardening playbook"
          echo ""
          echo "For automated restoration, re-run your original UFW playbook"
        mode: "0755"
      when: ufw_check.rc == 0

    - name: Final security warning
      debug:
        msg: |
          ⚠️  IMPORTANT SECURITY WARNING ⚠️

          Your firewall has been disabled/removed!

          This means your server currently has no UFW firewall protection.
          If this server is exposed to the internet, consider:

          1. Setting up alternative firewall protection
          2. Ensuring other security measures are in place
          3. Re-enabling firewall protection soon

          Restoration script created at: {{ backup_dir }}/restore-ufw.sh
