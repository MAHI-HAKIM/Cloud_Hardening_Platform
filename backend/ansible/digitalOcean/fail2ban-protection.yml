---
- name: Install and Configure Fail2Ban Protection
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    # Configuration variables - modify these as needed
    ban_time: "1h" # How long to ban IPs (1h = 1 hour)
    find_time: "10m" # Time window to check for failures (10m = 10 minutes)
    max_retry: 5 # Number of failures before ban
    trusted_ips: # IPs that will never be banned
      - "127.0.0.1"
      - "::1"
      # Add your home/office IP here to avoid locking yourself out
      # - "YOUR.HOME.IP.ADDRESS"

  tasks:
    - name: Update package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    - name: Install fail2ban
      apt:
        name: fail2ban
        state: present
      when: ansible_os_family == "Debian"

    - name: Create fail2ban jail.local configuration
      copy:
        dest: /etc/fail2ban/jail.local
        content: |
          [DEFAULT]
          # Ban settings
          bantime = {{ ban_time }}
          findtime = {{ find_time }}
          maxretry = {{ max_retry }}

          # Trusted IPs (never banned)
          ignoreip = {{ trusted_ips | join(' ') }}

          # Email settings (optional - configure if you want email alerts)
          # destemail = your-email@example.com
          # sender = fail2ban@{{ ansible_hostname }}
          # action = %(action_mwl)s

          # SSH protection
          [sshd]
          enabled = true
          port = ssh
          filter = sshd
          logpath = /var/log/auth.log
          maxretry = {{ max_retry }}
          bantime = {{ ban_time }}
          findtime = {{ find_time }}

          # Additional SSH protection for different attack patterns
          [sshd-ddos]
          enabled = true
          port = ssh
          filter = sshd-ddos
          logpath = /var/log/auth.log
          maxretry = 2
          bantime = {{ ban_time }}
          findtime = {{ find_time }}

          # Protect against port scanning
          [nmap]
          enabled = true
          filter = nmap
          logpath = /var/log/syslog
          maxretry = 3
          bantime = 24h

          # Web server protection (if you have nginx/apache)
          [nginx-http-auth]
          enabled = false
          port = http,https
          filter = nginx-http-auth
          logpath = /var/log/nginx/error.log

          [nginx-dos]
          enabled = false
          port = http,https
          filter = nginx-dos
          logpath = /var/log/nginx/access.log
          maxretry = 200
          findtime = 2m
          bantime = 10m
        mode: "0644"
        backup: yes
      notify: restart fail2ban

    - name: Create custom filter for SSH DDOS attacks
      copy:
        dest: /etc/fail2ban/filter.d/sshd-ddos.conf
        content: |
          [Definition]
          failregex = sshd(?:\[\d+\])?: Did not receive identification string from <HOST>
                      sshd(?:\[\d+\])?: Connection (?:closed|reset) by <HOST>
                      sshd(?:\[\d+\])?: Bad protocol version identification .* from <HOST>
          ignoreregex =
        mode: "0644"
      notify: restart fail2ban

    - name: Create custom filter for NMAP scanning
      copy:
        dest: /etc/fail2ban/filter.d/nmap.conf
        content: |
          [Definition]
          failregex = kernel: \[.*\] SFP:.*IN=.*OUT=.*SRC=<HOST>.*PROTO=TCP.*DPT=22.*
                      kernel: \[.*\] IPT INPUT packet died:.*SRC=<HOST>.*PROTO=TCP
          ignoreregex =
        mode: "0644"
      notify: restart fail2ban

    - name: Create Nginx DOS filter (for web servers)
      copy:
        dest: /etc/fail2ban/filter.d/nginx-dos.conf
        content: |
          [Definition]
          failregex = ^<HOST> -.*"(GET|POST).*
          ignoreregex =
        mode: "0644"
      notify: restart fail2ban

    - name: Enable and start fail2ban service
      systemd:
        name: fail2ban
        enabled: yes
        state: started

    - name: Wait for fail2ban to start
      wait_for:
        timeout: 10

    - name: Check fail2ban status
      command: fail2ban-client status
      register: fail2ban_status
      changed_when: false

    - name: Display fail2ban status
      debug:
        msg: "{{ fail2ban_status.stdout_lines }}"

    - name: Create fail2ban monitoring script
      copy:
        dest: /usr/local/bin/fail2ban-status.sh
        content: |
          #!/bin/bash
          echo "=== Fail2Ban Status ==="
          fail2ban-client status
          echo ""
          echo "=== Currently Banned IPs ==="
          for jail in $(fail2ban-client status | grep "Jail list" | sed "s/.*:\s*\(.*\)/\1/" | sed 's/,//g'); do
              echo "Jail: $jail"
              fail2ban-client status $jail | grep "Banned IP list"
          done
          echo ""
          echo "=== Recent Ban Activity ==="
          tail -20 /var/log/fail2ban.log | grep "Ban\|Unban"
        mode: "0755"

    - name: Create daily fail2ban report cron job
      cron:
        name: "Daily Fail2Ban Report"
        minute: "0"
        hour: "8"
        job: "/usr/local/bin/fail2ban-status.sh >> /var/log/fail2ban-daily.log"
        user: root

    - name: Set up log rotation for fail2ban logs
      copy:
        dest: /etc/logrotate.d/fail2ban-custom
        content: |
          /var/log/fail2ban-daily.log {
              weekly
              rotate 4
              compress
              delaycompress
              missingok
              notifempty
          }
        mode: "0644"

    - name: Display security information
      debug:
        msg: |
          Fail2Ban has been installed and configured!

          Key settings:
          - Ban time: {{ ban_time }}
          - Max retries: {{ max_retry }}
          - Find time window: {{ find_time }}

          Protected services:
          - SSH (port 22)
          - SSH DDOS attacks
          - NMAP port scanning

          To check status: fail2ban-client status
          To check specific jail: fail2ban-client status sshd
          To unban an IP: fail2ban-client set sshd unbanip IP_ADDRESS

          Log files:
          - /var/log/fail2ban.log (main log)
          - /var/log/fail2ban-daily.log (daily reports)

  handlers:
    - name: restart fail2ban
      systemd:
        name: fail2ban
        state: restarted
